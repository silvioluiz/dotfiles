# Oh My Zsh setup
export ZSH="$HOME/.oh-my-zsh"
export ZSH_DISABLE_COMPFIX=true

# Se o zprofile não rodar (shell não-login), garanta o brew ARM no PATH
if [[ "$(uname -s)" == "Darwin" ]] && ! command -v brew >/dev/null 2>&1; then
  [ -x "/opt/homebrew/bin/brew" ] && eval "$(/opt/homebrew/bin/brew shellenv)"
fi

# Toggle para controlar fzf-tab (coincide com o run_after_)
: ${USE_FZF_TAB:=yes}

# Autosuggestions: configs devem vir antes de carregar o plugin
export ZSH_AUTOSUGGEST_USE_ASYNC=1
export ZSH_AUTOSUGGEST_STRATEGY=(history)

# (Opcional) PATH local bin — já é feito no .zprofile; pode remover estas 2 linhas se quiser
case ":$PATH:" in *":$HOME/.local/bin:"*) ;; *) PATH="$HOME/.local/bin:$PATH" ;; esac
export PATH

DISABLE_UPDATE_PROMPT=true
zstyle ':omz:update' mode auto
zstyle ':omz:update' frequency 13

# Completion cache
[[ -d "$HOME/.zsh/.zcompcache" ]] || mkdir -p "$HOME/.zsh/.zcompcache"
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path "$HOME/.zsh/.zcompcache"

# Estilos de completion
zstyle ':completion:*' menu yes select
zstyle ':completion:*' group-name ''
zstyle ':completion:*:descriptions' format '%F{8}%d%f'
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}' 'r:|[._-]=** r:|=**'

# Histórico
HISTFILE="$HOME/.zsh_history"
HISTSIZE=100000
SAVEHIST=$HISTSIZE
setopt HIST_IGNORE_ALL_DUPS HIST_REDUCE_BLANKS EXTENDED_HISTORY
setopt INC_APPEND_HISTORY SHARE_HISTORY

# plugins OMZ
plugins=(
  git
  docker
  aws
  gh
  gcloud
  mise
  sudo
)

# fzf vs fzf-tab
if [[ "$USE_FZF_TAB" == "yes" ]]; then
  plugins+=(fzf-tab)
else
  plugins+=(fzf)
fi

# zsh-completions (3rd-party) — só adiciona se existir
ZSH_CUSTOM="${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}"
if [[ -d "$ZSH_CUSTOM/plugins/zsh-completions/src" ]]; then
  fpath=("$ZSH_CUSTOM/plugins/zsh-completions/src" $fpath)
fi

source "$ZSH/oh-my-zsh.sh"

# --- fzf key-bindings quando fzf-tab está ativo ---
if [[ "$USE_FZF_TAB" == "yes" ]]; then
  if command -v brew >/dev/null 2>&1; then
    FZF_SHELL_DIR="$(brew --prefix fzf 2>/dev/null)/shell"
    [[ -r "$FZF_SHELL_DIR/key-bindings.zsh" ]] && source "$FZF_SHELL_DIR/key-bindings.zsh"
  fi
  [[ -r "/usr/share/fzf/key-bindings.zsh" ]] && source "/usr/share/fzf/key-bindings.zsh"
  [[ -r "/usr/share/doc/fzf/examples/key-bindings.zsh" ]] && source "/usr/share/doc/fzf/examples/key-bindings.zsh"

  export FZF_DEFAULT_COMMAND='fd --hidden --follow --exclude .git 2>/dev/null || find .'
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
  export FZF_ALT_C_COMMAND='fd --type d --hidden --follow --exclude .git 2>/dev/null || find . -type d'

  zstyle ':fzf-tab:*' switch-group ',' '.'
  # zstyle ':fzf-tab:*' fzf-preview 'bat --style=numbers --color=always -- "{}" 2>/dev/null'
fi

# zoxide, starship
eval "$(zoxide init zsh)"
eval "$(starship init zsh)"

# zsh-autosuggestions (manual)
if [[ -d "$ZSH_CUSTOM/plugins/zsh-autosuggestions" ]]; then
  ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=8'
  source "$ZSH_CUSTOM/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh"
fi

# zsh-syntax-highlighting — por último
if [[ -d "$ZSH_CUSTOM/plugins/zsh-syntax-highlighting" ]]; then
  source "$ZSH_CUSTOM/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
fi

# Aliases fd/bat compat
if ! command -v fd >/dev/null 2>&1 && command -v fdfind >/dev/null 2>&1; then
  alias fd='fdfind'
fi
if ! command -v bat >/dev/null 2>&1 && command -v batcat >/dev/null 2>&1; then
  alias bat='batcat'
fi

# Perfis NVIM
alias nv='nvim'
alias lv='NVIM_APPNAME=lazyvim nvim'
alias lvv='lvim'
