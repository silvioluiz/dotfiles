#!/bin/bash
set -e

echo "===== üöÄ Iniciando checklist do ambiente chezmoi ====="

# 1. Shell e prompt
echo "[1/8] Testando shell e prompt..."
if [[ "$SHELL" == *"zsh" ]]; then
  echo "‚úÖ Shell padr√£o √© Zsh"
else
  echo "‚ùå Shell padr√£o n√£o √© Zsh"
fi

if command -v starship &>/dev/null; then
  echo "‚úÖ Starship instalado: $(starship --version)"
else
  echo "‚ùå Starship n√£o encontrado"
fi

# 2. Plugins Zsh
echo "[2/8] Testando plugins Zsh..."
if [[ -n "$(typeset -f _fzf_tab_completion 2>/dev/null)" ]]; then
  echo "‚úÖ fzf-tab carregado"
else
  echo "‚ö†Ô∏è fzf-tab n√£o detectado"
fi

if [[ -n "$ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE" ]]; then
  echo "‚úÖ zsh-autosuggestions carregado"
else
  echo "‚ö†Ô∏è zsh-autosuggestions n√£o detectado"
fi

if command -v zoxide &>/dev/null; then
  echo "‚úÖ zoxide instalado"
else
  echo "‚ùå zoxide n√£o encontrado"
fi

# 3. asdf e linguagens
echo "[3/8] Testando mise..."
if command -v mise &>/dev/null; then
  echo "‚úÖ mise instalado: $(mise --version | head -n1)"

  TOOLS=(node python go java)

  for t in "${TOOLS[@]}"; do
    installed_out="$(mise ls --installed "$t" 2>/dev/null | sed -n '1p')"
    current_out="$(mise ls --current "$t" 2>/dev/null | sed -n '1p')"

    if [[ -n "$installed_out" ]]; then
      # mostra a vers√£o real executando via mise (independe do PATH/activate)
      case "$t" in
        node)   ver="$(mise exec node  -- node -v 2>/dev/null | head -n1)" ;;
        python) ver="$(mise exec python -- python --version 2>/dev/null | head -n1)" ;;
        go)     ver="$(mise exec go     -- go version 2>/dev/null | head -n1)" ;;
        java)   ver="$(mise exec java   -- java -version 2>&1       | head -n1)" ;;
      esac
      echo "‚úÖ $t instalado no mise ‚Äî ${ver:-ok}"
    elif [[ -n "$current_out" ]]; then
      echo "‚ö†Ô∏è  $t configurado no mise, mas n√£o instalado (rode: mise install $t)"
    else
      echo "‚ùå $t n√£o encontrado no mise"
    fi
  done
else
  echo "‚ùå mise n√£o encontrado"
fi


# 4. CLIs cloud
echo "[4/8] Testando CLIs cloud..."
for cli in aws gh gcloud; do
  if command -v $cli &>/dev/null; then
    echo "‚úÖ $cli instalado: $($cli --version | head -n1)"
  else
    echo "‚ùå $cli n√£o encontrado"
  fi
done

# 5. Neovim
echo "[5/8] Testando Neovim..."
if command -v nvim &>/dev/null; then
  echo "‚úÖ Neovim instalado: $(nvim --version | head -n1)"
  if [[ -d "$HOME/.local/share/nvim/lazy/LazyVim" ]]; then
    echo "‚úÖ LazyVim detectado"
  else
    echo "‚ö†Ô∏è LazyVim n√£o detectado"
  fi
else
  echo "‚ùå Neovim n√£o encontrado"
fi

# 6. Utilit√°rios comuns
echo "[6/8] Testando utilit√°rios comuns..."
COMMON_TOOLS=(atuin bat btop curlie dust eza fd fzf ghostty htop hurl k9s lazydocker lazygit navi nu rg shellcheck starship yazi zoxide  )
# Nome ‚Äúamig√°vel‚Äù para exibir
declare -A FRIENDLY=(
  [nu]="nushell"
  [rg]="ripgrep"
)

# Flags padr√£o (na ordem)
DEFAULT_CANDIDATES=(
  "--version"
  "-V"
  "version"
  "version --short"
)

# Exce√ß√µes por ferramenta
declare -A CUSTOM
CUSTOM[fzf]="-v"                 # fzf usa -v
CUSTOM[k9s]="version --short"    # k9s tem subcomando version

try_version() {
  local tool="$1"
  local out=""
  local -a candidates=()

  if [[ -n "${CUSTOM[$tool]:-}" ]]; then
    # se houver exce√ß√£o, testa ela primeiro
    candidates+=("${CUSTOM[$tool]}")
  fi
  candidates+=("${DEFAULT_CANDIDATES[@]}")

  for cand in "${candidates[@]}"; do
    # divide cand em palavras (ex.: "version --short")
    # shellcheck disable=SC2206
    local args=( $cand )
    if out="$("$tool" "${args[@]}" 2>&1)"; then
      # pegamos s√≥ a 1a linha para n√£o poluir
      echo "$out" | head -n1
      return 0
    fi
  done

  return 1
}

for tool in "${COMMON_TOOLS[@]}"; do
  if command -v "$tool" >/dev/null 2>&1; then
    if ver="$(try_version "$tool")"; then
      printf "‚úÖ %s instalado ‚Äî %s\n" "${FRIENDLY[$tool]:-$tool}" "$ver"
    else
      printf "‚úÖ %s instalado\n" "${FRIENDLY[$tool]:-$tool}"
    fi
  else
    printf "‚ùå %s n√£o encontrado\n" "${FRIENDLY[$tool]:-$tool}"
  fi
done

# 7. Validar PATH
echo "[7/8] Validando PATH..."
echo "$PATH" | tr ':' '\n'

# 9. Finaliza√ß√£o
echo "[8/8] Checklist conclu√≠do!"
echo "===== ‚úÖ Fim ====="
